name: Terragrunt Workflow

on:
  pull_request:
    branches:
      - main

jobs:
  terragrunt:
    name: Terragrunt Matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, prod]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Install Terragrunt
      run: |
        wget -qO- https://github.com/gruntwork-io/terragrunt/releases/download/v0.30.0/terragrunt_linux_amd64.zip | sudo unzip -d /usr/local/bin/ -

    - name: Format Terraform code
      run: |
        terragrunt fmt -recursive

    - name: Plan Terraform changes
      id: plan
      run: |
        terragrunt plan -out=tfplan -input=false -lock=false -var "environment=${{ matrix.environment }}"
      continue-on-error: true

    - name: Comment PR with Terraform plan
      if: always()
      run: |
        echo "Terraform plan for environment: ${{ matrix.environment }}" >> comment.txt
        echo "----------------" >> comment.txt
        cat tfplan >> comment.txt
        echo "" >> comment.txt
        echo "For detailed changes, check the logs." >> comment.txt
        echo "::set-output name=comment::$(cat comment.txt)"

    - name: Post Terraform plan as a comment on PR
      if: always()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '${{ steps.plan.outputs.comment }}',
          })
    - name: Ask for Terraform apply approval
      if: always()
      run: echo "Please review the Terraform plan and approve the apply if it looks good."
