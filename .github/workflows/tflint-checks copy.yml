name: terraform-infra-provisioning
on:
  workflow_dispatch:
  push:
    branches: [ '*' ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - '**/README.md'
env:
  tf_version: '1.5.7'
  tg_version: '0.53.2'
  tg_dir: './'
  
permissions: read-all
#--------------------------
#
# PLEASE READ: Add a GitHub Actions variable 'INFRACOST_SCAN_TYPE' and set the value to either 'hcl_code' or 'tf_plan' depending on what type of Infracost scan desired.
#
#--------------------------
jobs:
  terraform:
    name: 'continuous-integration'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      continue-on-error: true

    # Terragrunt Check
    - name: Terraform Format
      id: fmt
      uses: gruntwork-io/terragrunt-action@v2
      with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'
      continue-on-error: true

#    - name: Setup Infracost
#      uses: infracost/actions/setup@v2
#      # See https://github.com/infracost/actions/tree/master/setup for other inputs
#      # If you can't use this action, see Docker images in https://infracost.io/cicd
#      with:
#        api-key: ${{ secrets.INFRACOST_API_KEY }}
#      if: github.event_name == 'pull_request'
#      continue-on-error: true

      # Checkout the base branch of the pull request (e.g. main/master).
#    - name: Checkout base branch
#      if: ${{ (github.event_name == 'pull_request') && (vars.INFRACOST_SCAN_TYPE  == 'hcl_code') }}
#      uses: actions/checkout@v3
#      with:
#        ref: '${{ github.event.pull_request.base.ref }}'
#      continue-on-error: true

    # Generate Infracost JSON file as the baseline.
#    - name: Generate Infracost cost estimate baseline
#      if: ${{ (github.event_name == 'pull_request') && (vars.INFRACOST_SCAN_TYPE  == 'hcl_code') }}
#      run: |
#        infracost breakdown --path=. \
#                            --format=json \
#                            --out-file=/tmp/infracost-base.json
#      continue-on-error: true

    # Checkout the current PR branch so we can create a diff.
#    - name: Checkout PR branch
#      if: ${{ (github.event_name == 'pull_request') && (vars.INFRACOST_SCAN_TYPE  == 'hcl_code') }}
#      uses: actions/checkout@v3
#      continue-on-error: true

    # Generate an Infracost diff and save it to a JSON file.
#    - name: Generate Infracost diff
#      if: ${{ (github.event_name == 'pull_request') && (vars.INFRACOST_SCAN_TYPE  == 'hcl_code') }}
#      run: |
#        infracost diff --path=. \
#                        --format=json \
#                        --compare-to=/tmp/infracost-base.json \
#                        --out-file=/tmp/infracost.json
#      continue-on-error: true

    # Checks that all Terraform configuration files are correctly written
#    - name: Terraform Validate
#      id: validate
#      run: terraform validate -no-color
    # Generates an execution plan for Terraform
#    - name: Terraform Plan
#      id: plan
#      if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
#      run: |
#        terraform plan -no-color -input=false \
#        -out=TFplan.JSON
#      continue-on-error: true

    # Generate an Infracost diff and save it to a JSON file.
#    - name: Generate Infracost diff
#      if:  ${{ (github.event_name == 'pull_request') && (vars.INFRACOST_SCAN_TYPE  == 'tf_plan') }}
#      run: |
#        infracost diff --path=TFplan.JSON \
#                        --format=json \
#                        --out-file=/tmp/infracost.json
#      continue-on-error: true

#    - name: Post Infracost estimate
#      if: github.event_name == 'pull_request'
#      run: |
#          infracost comment github --path=/tmp/infracost.json \
#                                    --repo=$GITHUB_REPOSITORY \
#                                    --github-token=${{github.token}} \
#                                    --pull-request=${{github.event.pull_request.number}} \
#                                    --show-skipped \
#                                    --behavior=update
#      continue-on-error: true

    - name: Post Terraform Plan output
      uses: actions/github-script@v6
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = #### Terraform 22121 ‚öôÔ∏è\`${{ steps.fmt.outcome }}\`
          <details><summary>Show Plan</summary>
          <code>${steps.fmt.outputs.tg_action_output}</code>
          </details>
          #### Terraform 22121 ‚öôÔ∏è\`${{ steps.fmt.outcome }}\`

          #### All vars ü§ñ\`${{ toJSON(steps) }}\`

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
      continue-on-error: true
      
    # On push to "main", build or change infrastructure according to Terraform configuration files
    # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/main'
#      run: terraform apply -auto-approve -input=false